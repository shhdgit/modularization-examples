{"componentChunkName":"component---node-modules-gatsby-theme-gardenx-src-templates-local-file-js","path":"/sample/stableinf/io/README","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"提供三种-io-外设的标准接口\"\n  }, \"\\u63D0\\u4F9B\\u4E09\\u79CD I/O \\u5916\\u8BBE\\u7684\\u6807\\u51C6\\u63A5\\u53E3\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RPC \\u8C03\\u7528\\uFF1AServiceProtocol.callService\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5173\\u7CFB\\u578B\\u6570\\u636E\\u5E93\\u5355\\u8868\\uFF1ADatabase.insert/Database.query/ActiveRecord.update/ActiveRecord.delete\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5173\\u7CFB\\u578B\\u6570\\u636E\\u5E93\\u591A\\u8868\\uFF1ADatabase.executeSql\")), mdx(\"h1\", {\n    \"id\": \"提供分布式-trace-和-io-订阅\"\n  }, \"\\u63D0\\u4F9B\\u5206\\u5E03\\u5F0F Trace \\u548C I/O \\u8BA2\\u9605\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trace\\uFF1A\\u7531 TraceId/TraceOp/Baggage \\u4E09\\u90E8\\u5206\\u6784\\u6210\\uFF0C\\u5BF9\\u5E94 zipkin \\u7B49\\u5206\\u5E03\\u5F0F\\u8FFD\\u8E2A\\u7684\\u6A21\\u578B\\u3002\\u4E00\\u4E2A Trace \\u7531\\u591A\\u4E2A Operation \\u7EC4\\u6210\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operation\\uFF1ATrace \\u5728\\u4E00\\u4E2A\\u8FDB\\u7A0B\\u5185\\u6267\\u884C\\u7684\\u90E8\\u5206\\u3002\\u4E00\\u4E2A Operation \\u7531\\u591A\\u4E2A Scene \\u7EC4\\u6210\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scene\\uFF1A\\u4E00\\u6B21 async \\u7684\\u5F02\\u6B65\\u8C03\\u7528\\u94FE\\u3002\\u7531 Scene \\u8DDF\\u8E2A\\u4E86\\u5BF9 ActiveRecord \\u7684\\u8BFB\\u5199\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ActiveRecord\\uFF1A\\u4EE3\\u8868\\u4E00\\u5F20\\u6570\\u636E\\u5E93\\u8868\\uFF0C\\u662F\\u88AB\\u8BA2\\u9605\\u7684\\u6982\\u5FF5\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/sample/stableinf/io/README","title":"提供三种 I/O 外设的标准接口"}}},"pageContext":{"id":"d8597f2d-e0a2-5724-87fa-52132e9561a5"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}